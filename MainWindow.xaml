<Window x:Class="DragNDropTask.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DragNDropTask"
        xmlns:dashboards="clr-namespace:DragNDropTask.Dashboards"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:col="clr-namespace:System.Collections;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:DragNDropViewModel></local:DragNDropViewModel>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate x:Key="LayoutSelectorTemplate" DataType="{x:Type local:LayoutSetting}">
            <RadioButton GroupName="LayoutsGroup" Content="{Binding Name}">
                <behaviours:Interaction.Triggers>
                    <behaviours:EventTrigger EventName="Checked">
                        <behaviours:InvokeCommandAction Command="{Binding 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, 
                            Path= DataContext.SelectLayoutSettingCommand}" CommandParameter="{Binding }"/>
                    </behaviours:EventTrigger>
                </behaviours:Interaction.Triggers>
            </RadioButton>
        </DataTemplate>

        <DataTemplate x:Key="DashboardItemTemplate" DataType="{x:Type ContentControl}">
            <ContentControl Margin="10" Content="{Binding }"></ContentControl>
        </DataTemplate>

        <ControlTemplate x:Key="DashboardTemplate" TargetType="dashboards:DashboardControl">
            <Grid Name="DashboardRoot" ShowGridLines="True">

            </Grid>
        </ControlTemplate>
        <local:PositionIndexPairConverter x:Key="PositionIndexPairConverter" />

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="4*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <ItemsControl x:Name="ItemsControl"
                          ItemTemplate="{StaticResource LayoutSelectorTemplate}" 
                          ItemsSource="{Binding LayoutSettings}"/>
            <TextBlock>Selected scheme:</TextBlock>
            <TextBlock Text="{Binding Path= SelectedLayoutSetting.Name}"></TextBlock>
            <StackPanel>
                <TextBox x:Name="PosIndex1">0</TextBox>
                <TextBox x:Name="PosIndex2">1</TextBox>
                <Button Height="20" Command="{Binding Path=ChangePositionIndexesCommand}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource PositionIndexPairConverter}">
                            <Binding ElementName="PosIndex1" Path="Text"></Binding>
                            <Binding ElementName="PosIndex2" Path="Text"></Binding>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
            <Button Command="{Binding AddRectangleToItemsSourceCommand}">
                <Button.Content>Add new rectangle</Button.Content>
            </Button>
        </StackPanel>
        <dashboards:DashboardControl 
            ItemTemplate="{StaticResource DashboardItemTemplate}"
            ItemsSource="{Binding ItemsSource}"
            Template="{StaticResource DashboardTemplate}"
            LayoutSetting="{Binding Path=SelectedLayoutSetting, Mode=OneWay}"  
            Grid.Column="1">

            <behaviours:Interaction.Triggers>
                <behaviours:EventTrigger EventName="PositionsSwapped">
                    <behaviours:InvokeCommandAction Command="{Binding PositionsSwappedHandlingCommand}"
                                                    PassEventArgsToCommand="True">
                    </behaviours:InvokeCommandAction>
                </behaviours:EventTrigger>
            </behaviours:Interaction.Triggers>
        </dashboards:DashboardControl>
    </Grid>
</Window>
